name: CI

on:
  push:
    # Publish `main` as container `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  CONTAINER_IMAGE_NAME: ${{ github.repository }}
  CONTAINER_IMAGE_REGISTRY: ghcr.io

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Publish image
  publish:
    # Ensure test job passes before pushing image.
    needs: test

    name: Publish
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    strategy:
      matrix:
        include:
          - dir: 7.3
            version: 7.3
            latest: true
          - dir: 7.3/laravel
            version: 7.3-laravel
            latest: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build container image
        run: |
          buildah bud -f ./${{ matrix.dir }} --format=docker \
            --label org.opencontainers.image.title="$CONTAINER_IMAGE_NAME" \
            --label org.opencontainers.image.description="${{ github.event.repository.description }}" \
            --label org.opencontainers.image.url="${{ github.event.repository.html_url }}" \
            --label org.opencontainers.image.source="${{ github.event.repository.html_url }}" \
            --label org.opencontainers.image.version="${{ matrix.version }}" \
            --label org.opencontainers.image.created="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            --label org.opencontainers.image.revision="${{ github.sha }}" \
            --label org.opencontainers.image.licenses="${{ github.event.repository.license.spdx_id }}" \
            --tag $CONTAINER_IMAGE_NAME .

      - name: Log in to GitHub Registry
        run: echo ${{ secrets.CR_PAT }} | buildah login -u ${{ github.actor }} --password-stdin $CONTAINER_IMAGE_REGISTRY

      - name: Push image to GitHub Registry
        run: |
          IMAGE_ID=$CONTAINER_IMAGE_REGISTRY/$CONTAINER_IMAGE_NAME:${{ matrix.version }}

          buildah tag $CONTAINER_IMAGE_NAME $IMAGE_ID
          buildah push $IMAGE_ID

      - name: Latest tag
        if: matrix.latest
        run: |
          IMAGE_ID=$CONTAINER_IMAGE_REGISTRY/$CONTAINER_IMAGE_NAME:latest

          buildah tag $CONTAINER_IMAGE_NAME $IMAGE_ID
          buildah push $IMAGE_ID
